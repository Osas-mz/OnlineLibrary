// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineLibrary.Areas.Identity.Data;

namespace OnlineLibrary.Migrations.Book
{
    [DbContext(typeof(BookContext))]
    [Migration("20211120141614_checkincheckout")]
    partial class checkincheckout
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.21")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("OnlineLibrary.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Authors")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BookGenre")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("BookImageUrl")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DateAdded")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("ISBN")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Publishdate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Publisher")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RevisionNumber")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("OnlineLibrary.Models.BookCheckinCheckout", b =>
                {
                    b.Property<int>("CheckOutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<string>("CheckInDate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CheckInStatus")
                        .HasColumnType("int");

                    b.Property<int>("CheckOutStatus")
                        .HasColumnType("int");

                    b.Property<string>("CheckOutdate")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("CheckStatus")
                        .HasColumnType("int");

                    b.Property<string>("readerId")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("CheckOutId");

                    b.ToTable("BookCheckinCheckouts");
                });
#pragma warning restore 612, 618
        }
    }
}
